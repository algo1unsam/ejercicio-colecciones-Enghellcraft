import capos.*

test "encontrar artefactos" {
	assert.equals([], rolando.queLlevo())
	rolando.recolectaObjeto(espadaDelDestino)
	assert.equals([espadaDelDestino], rolando.queLlevo())
	assert.equals([espadaDelDestino], rolando.queLevante())
	rolando.recolectaObjeto(libroDeHechizos)
	assert.equals([espadaDelDestino, libroDeHechizos], rolando.queLlevo())
	assert.equals([espadaDelDestino, libroDeHechizos], rolando.queLevante())
	rolando.recolectaObjeto(collarDivino)
	assert.equals([espadaDelDestino, libroDeHechizos], rolando.queLlevo())
	assert.equals([espadaDelDestino, libroDeHechizos], rolando.queLevante())
}
test "castillo" {
	assert.equals([], rolando.queLlevo())
	rolando.recolectaObjeto(espadaDelDestino)
	assert.equals([espadaDelDestino], rolando.queLlevo())
	assert.equals([espadaDelDestino], rolando.queLevante())
	rolando.recolectaObjeto(libroDeHechizos)
	assert.equals([espadaDelDestino, libroDeHechizos], rolando.queLlevo())
	assert.equals([espadaDelDestino, libroDeHechizos], rolando.queLevante())
	rolando.dejarEnCastillo()
	assert.equals([], rolando.queLlevo())
	assert.equals([espadaDelDestino, libroDeHechizos], rolando.queLevante())
	rolando.recolectaObjeto(collarDivino)
	assert.equals([collarDivino], rolando.queLlevo())
	assert.equals([espadaDelDestino, libroDeHechizos, collarDivino], rolando.queLevante())
	rolando.dejarEnCastillo()
	assert.equals([], rolando.queLlevo())
	assert.equals([espadaDelDestino, libroDeHechizos, collarDivino], rolando.queLevante())
	}
test "posesiones" {
	assert.equals([], rolando.queLlevo())
	rolando.recolectaObjeto(espadaDelDestino)
	rolando.recolectaObjeto(collarDivino)
	assert.equals([espadaDelDestino, collarDivino], rolando.queLlevo())	
	assert.equals([espadaDelDestino, collarDivino], rolando.queLevante())		
	assert.that(rolando.tengoArtefacto(espadaDelDestino))
	assert.notThat(rolando.tengoArtefacto(libroDeHechizos))
	rolando.dejarEnCastillo()
	assert.that(rolando.tengoArtefacto(espadaDelDestino))
	assert.notThat(rolando.tengoArtefacto(libroDeHechizos))
	rolando.recolectaObjeto(armaduraValyrio)
	assert.equals([armaduraValyrio], rolando.queLlevo())
	assert.equals([espadaDelDestino, collarDivino, armaduraValyrio], rolando.queLevante())	
	assert.that(rolando.tengoArtefacto(espadaDelDestino))
	assert.that(rolando.tengoArtefacto(collarDivino))
	assert.that(rolando.tengoArtefacto(armaduraValyrio))
	assert.notThat(rolando.tengoArtefacto(libroDeHechizos))
}
test "historia" {
	assert.equals([], rolando.queLlevo())
	rolando.recolectaObjeto(espadaDelDestino)
	assert.equals([espadaDelDestino], rolando.queLlevo())
	assert.equals([espadaDelDestino], rolando.queLevante())
	rolando.recolectaObjeto(libroDeHechizos)
	assert.equals([espadaDelDestino, libroDeHechizos], rolando.queLlevo())
	assert.equals([espadaDelDestino, libroDeHechizos], rolando.queLevante())
	rolando.recolectaObjeto(collarDivino)
	assert.equals([espadaDelDestino, libroDeHechizos], rolando.queLlevo())
	assert.equals([espadaDelDestino, libroDeHechizos], rolando.queLevante())	
	rolando.dejarEnCastillo()
	assert.equals([], rolando.queLlevo())
	assert.equals([espadaDelDestino, libroDeHechizos], rolando.queLevante())
	rolando.recolectaObjeto(armaduraValyrio)
	assert.equals([armaduraValyrio], rolando.queLlevo())
	assert.equals([espadaDelDestino, libroDeHechizos, armaduraValyrio], rolando.queLevante())
	rolando.recolectaObjeto(collarDivino)
	assert.equals([armaduraValyrio, collarDivino], rolando.queLlevo())
	assert.equals([espadaDelDestino, libroDeHechizos, armaduraValyrio, collarDivino], rolando.queLevante())
}
